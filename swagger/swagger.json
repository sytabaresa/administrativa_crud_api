{
    "swagger": "2.0",
    "info": {
        "title": "beego Test API",
        "description": "beego has a very cool tools to autogenerate documents for your API",
        "version": "1.0.0",
        "termsOfService": "http://beego.me/",
        "contact": {
            "email": "astaxie@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/acta_inicio/": {
            "get": {
                "tags": [
                    "acta_inicio"
                ],
                "description": "get ActaInicio",
                "operationId": "ActaInicioController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ActaInicio"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "acta_inicio"
                ],
                "description": "create ActaInicio",
                "operationId": "ActaInicioController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ActaInicio content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ActaInicio"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ActaInicio"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/acta_inicio/{id}": {
            "get": {
                "tags": [
                    "acta_inicio"
                ],
                "description": "get ActaInicio by id",
                "operationId": "ActaInicioController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ActaInicio"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "acta_inicio"
                ],
                "description": "update the ActaInicio",
                "operationId": "ActaInicioController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ActaInicio content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ActaInicio"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ActaInicio"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "acta_inicio"
                ],
                "description": "delete the ActaInicio",
                "operationId": "ActaInicioController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/actividad_economica_necesidad/": {
            "get": {
                "tags": [
                    "actividad_economica_necesidad"
                ],
                "description": "get ActividadEconomicaNecesidad",
                "operationId": "ActividadEconomicaNecesidadController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ActividadEconomicaNecesidad"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "actividad_economica_necesidad"
                ],
                "description": "create ActividadEconomicaNecesidad",
                "operationId": "ActividadEconomicaNecesidadController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ActividadEconomicaNecesidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ActividadEconomicaNecesidad"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ActividadEconomicaNecesidad"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/actividad_economica_necesidad/{id}": {
            "get": {
                "tags": [
                    "actividad_economica_necesidad"
                ],
                "description": "get ActividadEconomicaNecesidad by id",
                "operationId": "ActividadEconomicaNecesidadController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ActividadEconomicaNecesidad"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "actividad_economica_necesidad"
                ],
                "description": "update the ActividadEconomicaNecesidad",
                "operationId": "ActividadEconomicaNecesidadController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ActividadEconomicaNecesidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ActividadEconomicaNecesidad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ActividadEconomicaNecesidad"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "actividad_economica_necesidad"
                ],
                "description": "delete the ActividadEconomicaNecesidad",
                "operationId": "ActividadEconomicaNecesidadController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/actividad_especifica/": {
            "get": {
                "tags": [
                    "actividad_especifica"
                ],
                "description": "get ActividadEspecifica",
                "operationId": "ActividadEspecificaController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ActividadEspecifica"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "actividad_especifica"
                ],
                "description": "create ActividadEspecifica",
                "operationId": "ActividadEspecificaController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ActividadEspecifica content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ActividadEspecifica"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ActividadEspecifica"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/actividad_especifica/{id}": {
            "get": {
                "tags": [
                    "actividad_especifica"
                ],
                "description": "get ActividadEspecifica by id",
                "operationId": "ActividadEspecificaController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ActividadEspecifica"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "actividad_especifica"
                ],
                "description": "update the ActividadEspecifica",
                "operationId": "ActividadEspecificaController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ActividadEspecifica content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ActividadEspecifica"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ActividadEspecifica"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "actividad_especifica"
                ],
                "description": "delete the ActividadEspecifica",
                "operationId": "ActividadEspecificaController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/catalogo_elemento/": {
            "get": {
                "tags": [
                    "catalogo_elemento"
                ],
                "description": "get CatalogoElemento",
                "operationId": "CatalogoElementoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.CatalogoElemento"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "catalogo_elemento"
                ],
                "description": "create CatalogoElemento",
                "operationId": "CatalogoElementoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CatalogoElemento content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CatalogoElemento"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.CatalogoElemento"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/catalogo_elemento/{id}": {
            "get": {
                "tags": [
                    "catalogo_elemento"
                ],
                "description": "get CatalogoElemento by id",
                "operationId": "CatalogoElementoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.CatalogoElemento"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "catalogo_elemento"
                ],
                "description": "update the CatalogoElemento",
                "operationId": "CatalogoElementoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CatalogoElemento content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CatalogoElemento"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.CatalogoElemento"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "catalogo_elemento"
                ],
                "description": "delete the CatalogoElemento",
                "operationId": "CatalogoElementoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/catalogo_elemento_grupo/": {
            "get": {
                "tags": [
                    "catalogo_elemento_grupo"
                ],
                "description": "get CatalogoElementoGrupo",
                "operationId": "CatalogoElementoGrupoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.CatalogoElementoGrupo"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "catalogo_elemento_grupo"
                ],
                "description": "create CatalogoElementoGrupo",
                "operationId": "CatalogoElementoGrupoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CatalogoElementoGrupo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CatalogoElementoGrupo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.CatalogoElementoGrupo"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/catalogo_elemento_grupo/{id}": {
            "get": {
                "tags": [
                    "catalogo_elemento_grupo"
                ],
                "description": "get CatalogoElementoGrupo by id",
                "operationId": "CatalogoElementoGrupoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.CatalogoElementoGrupo"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "catalogo_elemento_grupo"
                ],
                "description": "update the CatalogoElementoGrupo",
                "operationId": "CatalogoElementoGrupoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CatalogoElementoGrupo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CatalogoElementoGrupo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.CatalogoElementoGrupo"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "catalogo_elemento_grupo"
                ],
                "description": "delete the CatalogoElementoGrupo",
                "operationId": "CatalogoElementoGrupoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/componente_resolucion/": {
            "get": {
                "tags": [
                    "componente_resolucion"
                ],
                "description": "get ComponenteResolucion",
                "operationId": "ComponenteResolucionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ComponenteResolucion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "componente_resolucion"
                ],
                "description": "create ComponenteResolucion",
                "operationId": "ComponenteResolucionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ComponenteResolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ComponenteResolucion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ComponenteResolucion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/componente_resolucion/{id}": {
            "get": {
                "tags": [
                    "componente_resolucion"
                ],
                "description": "get ComponenteResolucion by id",
                "operationId": "ComponenteResolucionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ComponenteResolucion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "componente_resolucion"
                ],
                "description": "update the ComponenteResolucion",
                "operationId": "ComponenteResolucionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ComponenteResolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ComponenteResolucion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ComponenteResolucion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "componente_resolucion"
                ],
                "description": "delete the ComponenteResolucion",
                "operationId": "ComponenteResolucionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/contenido_resolucion/ResolucionTemplate": {
            "get": {
                "tags": [
                    "contenido_resolucion"
                ],
                "description": "get ResolucionCompleta by id",
                "operationId": "ResolucionCompletaController.Get Template",
                "parameters": [
                    {
                        "in": "path",
                        "name": "idResolucion",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ResolucionCompleta"
                        }
                    },
                    "403": {}
                }
            }
        },
        "/contenido_resolucion/{idResolucion}": {
            "get": {
                "tags": [
                    "contenido_resolucion"
                ],
                "description": "get ResolucionCompleta by id",
                "operationId": "ResolucionCompletaController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "idResolucion",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ResolucionCompleta"
                        }
                    },
                    "403": {
                        "description": ":idResolucion is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "contenido_resolucion"
                ],
                "description": "update the ResolucionCompleta",
                "operationId": "ResolucionCompletaController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "idResolucion",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ResolucionCompleta"
                        }
                    },
                    "403": {
                        "description": ":idResolucion is not int"
                    }
                }
            }
        },
        "/contrato_disponibilidad/": {
            "get": {
                "tags": [
                    "contrato_disponibilidad"
                ],
                "description": "get ContratoDisponibilidad",
                "operationId": "ContratoDisponibilidadController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ContratoDisponibilidad"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "contrato_disponibilidad"
                ],
                "description": "create ContratoDisponibilidad",
                "operationId": "ContratoDisponibilidadController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ContratoDisponibilidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ContratoDisponibilidad"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ContratoDisponibilidad"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/contrato_disponibilidad/{id}": {
            "get": {
                "tags": [
                    "contrato_disponibilidad"
                ],
                "description": "get ContratoDisponibilidad by id",
                "operationId": "ContratoDisponibilidadController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ContratoDisponibilidad"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "contrato_disponibilidad"
                ],
                "description": "update the ContratoDisponibilidad",
                "operationId": "ContratoDisponibilidadController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ContratoDisponibilidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ContratoDisponibilidad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ContratoDisponibilidad"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "contrato_disponibilidad"
                ],
                "description": "delete the ContratoDisponibilidad",
                "operationId": "ContratoDisponibilidadController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/contrato_estado/": {
            "get": {
                "tags": [
                    "contrato_estado"
                ],
                "description": "get ContratoEstado",
                "operationId": "ContratoEstadoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ContratoEstado"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "contrato_estado"
                ],
                "description": "create ContratoEstado",
                "operationId": "ContratoEstadoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ContratoEstado content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ContratoEstado"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ContratoEstado"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/contrato_estado/{id}": {
            "get": {
                "tags": [
                    "contrato_estado"
                ],
                "description": "get ContratoEstado by id",
                "operationId": "ContratoEstadoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ContratoEstado"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "contrato_estado"
                ],
                "description": "update the ContratoEstado",
                "operationId": "ContratoEstadoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ContratoEstado content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ContratoEstado"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ContratoEstado"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "contrato_estado"
                ],
                "description": "delete the ContratoEstado",
                "operationId": "ContratoEstadoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/contrato_general/": {
            "get": {
                "tags": [
                    "contrato_general"
                ],
                "description": "get ContratoGeneral",
                "operationId": "ContratoGeneralController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ContratoGeneral"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "contrato_general"
                ],
                "description": "create ContratoGeneral",
                "operationId": "ContratoGeneralController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ContratoGeneral content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ContratoGeneral"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ContratoGeneral"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/contrato_general/{id}": {
            "get": {
                "tags": [
                    "contrato_general"
                ],
                "description": "get ContratoGeneral by id",
                "operationId": "ContratoGeneralController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ContratoGeneral"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "contrato_general"
                ],
                "description": "update the ContratoGeneral",
                "operationId": "ContratoGeneralController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ContratoGeneral content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ContratoGeneral"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ContratoGeneral"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "contrato_general"
                ],
                "description": "delete the ContratoGeneral",
                "operationId": "ContratoGeneralController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/dedicacion/": {
            "get": {
                "tags": [
                    "dedicacion"
                ],
                "description": "get Dedicacion",
                "operationId": "DedicacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Dedicacion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "dedicacion"
                ],
                "description": "create Dedicacion",
                "operationId": "DedicacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Dedicacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Dedicacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Dedicacion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/dedicacion/{id}": {
            "get": {
                "tags": [
                    "dedicacion"
                ],
                "description": "get Dedicacion by id",
                "operationId": "DedicacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Dedicacion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "dedicacion"
                ],
                "description": "update the Dedicacion",
                "operationId": "DedicacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Dedicacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Dedicacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Dedicacion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "dedicacion"
                ],
                "description": "delete the Dedicacion",
                "operationId": "DedicacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/dependencia_necesidad/": {
            "get": {
                "tags": [
                    "dependencia_necesidad"
                ],
                "description": "get DependenciaNecesidad",
                "operationId": "DependenciaNecesidadController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.DependenciaNecesidad"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "dependencia_necesidad"
                ],
                "description": "create DependenciaNecesidad",
                "operationId": "DependenciaNecesidadController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DependenciaNecesidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DependenciaNecesidad"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.DependenciaNecesidad"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/dependencia_necesidad/{id}": {
            "get": {
                "tags": [
                    "dependencia_necesidad"
                ],
                "description": "get DependenciaNecesidad by id",
                "operationId": "DependenciaNecesidadController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.DependenciaNecesidad"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "dependencia_necesidad"
                ],
                "description": "update the DependenciaNecesidad",
                "operationId": "DependenciaNecesidadController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DependenciaNecesidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DependenciaNecesidad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.DependenciaNecesidad"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "dependencia_necesidad"
                ],
                "description": "delete the DependenciaNecesidad",
                "operationId": "DependenciaNecesidadController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/detalle_servicio_necesidad/": {
            "get": {
                "tags": [
                    "detalle_servicio_necesidad"
                ],
                "description": "get DetalleServicioNecesidad",
                "operationId": "DetalleServicioNecesidadController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.DetalleServicioNecesidad"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "detalle_servicio_necesidad"
                ],
                "description": "create DetalleServicioNecesidad",
                "operationId": "DetalleServicioNecesidadController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DetalleServicioNecesidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DetalleServicioNecesidad"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.DetalleServicioNecesidad"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/detalle_servicio_necesidad/{id}": {
            "get": {
                "tags": [
                    "detalle_servicio_necesidad"
                ],
                "description": "get DetalleServicioNecesidad by id",
                "operationId": "DetalleServicioNecesidadController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.DetalleServicioNecesidad"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "detalle_servicio_necesidad"
                ],
                "description": "update the DetalleServicioNecesidad",
                "operationId": "DetalleServicioNecesidadController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DetalleServicioNecesidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DetalleServicioNecesidad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.DetalleServicioNecesidad"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "detalle_servicio_necesidad"
                ],
                "description": "delete the DetalleServicioNecesidad",
                "operationId": "DetalleServicioNecesidadController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/disponibilidad_apropiacion_solicitud_rp/": {
            "get": {
                "tags": [
                    "disponibilidad_apropiacion_solicitud_rp"
                ],
                "description": "get DisponibilidadApropiacionSolicitudRp",
                "operationId": "DisponibilidadApropiacionSolicitudRpController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.DisponibilidadApropiacionSolicitudRp"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "disponibilidad_apropiacion_solicitud_rp"
                ],
                "description": "create DisponibilidadApropiacionSolicitudRp",
                "operationId": "DisponibilidadApropiacionSolicitudRpController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DisponibilidadApropiacionSolicitudRp content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DisponibilidadApropiacionSolicitudRp"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.DisponibilidadApropiacionSolicitudRp"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/disponibilidad_apropiacion_solicitud_rp/{id}": {
            "get": {
                "tags": [
                    "disponibilidad_apropiacion_solicitud_rp"
                ],
                "description": "get DisponibilidadApropiacionSolicitudRp by id",
                "operationId": "DisponibilidadApropiacionSolicitudRpController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.DisponibilidadApropiacionSolicitudRp"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "disponibilidad_apropiacion_solicitud_rp"
                ],
                "description": "update the DisponibilidadApropiacionSolicitudRp",
                "operationId": "DisponibilidadApropiacionSolicitudRpController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DisponibilidadApropiacionSolicitudRp content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DisponibilidadApropiacionSolicitudRp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.DisponibilidadApropiacionSolicitudRp"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "disponibilidad_apropiacion_solicitud_rp"
                ],
                "description": "delete the DisponibilidadApropiacionSolicitudRp",
                "operationId": "DisponibilidadApropiacionSolicitudRpController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/especificacion_tecnica/": {
            "get": {
                "tags": [
                    "especificacion_tecnica"
                ],
                "description": "get EspecificacionTecnica",
                "operationId": "EspecificacionTecnicaController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.EspecificacionTecnica"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "especificacion_tecnica"
                ],
                "description": "create EspecificacionTecnica",
                "operationId": "EspecificacionTecnicaController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EspecificacionTecnica content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EspecificacionTecnica"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EspecificacionTecnica"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/especificacion_tecnica/{id}": {
            "get": {
                "tags": [
                    "especificacion_tecnica"
                ],
                "description": "get EspecificacionTecnica by id",
                "operationId": "EspecificacionTecnicaController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.EspecificacionTecnica"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "especificacion_tecnica"
                ],
                "description": "update the EspecificacionTecnica",
                "operationId": "EspecificacionTecnicaController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EspecificacionTecnica content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EspecificacionTecnica"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.EspecificacionTecnica"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "especificacion_tecnica"
                ],
                "description": "delete the EspecificacionTecnica",
                "operationId": "EspecificacionTecnicaController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/estado_contrato/": {
            "get": {
                "tags": [
                    "estado_contrato"
                ],
                "description": "get EstadoContrato",
                "operationId": "EstadoContratoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.EstadoContrato"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "estado_contrato"
                ],
                "description": "create EstadoContrato",
                "operationId": "EstadoContratoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoContrato content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoContrato"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EstadoContrato"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/estado_contrato/{id}": {
            "get": {
                "tags": [
                    "estado_contrato"
                ],
                "description": "get EstadoContrato by id",
                "operationId": "EstadoContratoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.EstadoContrato"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "estado_contrato"
                ],
                "description": "update the EstadoContrato",
                "operationId": "EstadoContratoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoContrato content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoContrato"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.EstadoContrato"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "estado_contrato"
                ],
                "description": "delete the EstadoContrato",
                "operationId": "EstadoContratoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/estado_necesidad/": {
            "get": {
                "tags": [
                    "estado_necesidad"
                ],
                "description": "get EstadoNecesidad",
                "operationId": "EstadoNecesidadController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.EstadoNecesidad"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "estado_necesidad"
                ],
                "description": "create EstadoNecesidad",
                "operationId": "EstadoNecesidadController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoNecesidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoNecesidad"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EstadoNecesidad"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/estado_necesidad/{id}": {
            "get": {
                "tags": [
                    "estado_necesidad"
                ],
                "description": "get EstadoNecesidad by id",
                "operationId": "EstadoNecesidadController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.EstadoNecesidad"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "estado_necesidad"
                ],
                "description": "update the EstadoNecesidad",
                "operationId": "EstadoNecesidadController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoNecesidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoNecesidad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.EstadoNecesidad"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "estado_necesidad"
                ],
                "description": "delete the EstadoNecesidad",
                "operationId": "EstadoNecesidadController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/estado_resolucion/": {
            "get": {
                "tags": [
                    "estado_resolucion"
                ],
                "description": "get EstadoResolucion",
                "operationId": "EstadoResolucionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.EstadoResolucion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "estado_resolucion"
                ],
                "description": "create EstadoResolucion",
                "operationId": "EstadoResolucionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoResolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoResolucion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EstadoResolucion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/estado_resolucion/{id}": {
            "get": {
                "tags": [
                    "estado_resolucion"
                ],
                "description": "get EstadoResolucion by id",
                "operationId": "EstadoResolucionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.EstadoResolucion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "estado_resolucion"
                ],
                "description": "update the EstadoResolucion",
                "operationId": "EstadoResolucionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoResolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoResolucion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.EstadoResolucion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "estado_resolucion"
                ],
                "description": "delete the EstadoResolucion",
                "operationId": "EstadoResolucionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fuente_financiacion_rubro_necesidad/": {
            "get": {
                "tags": [
                    "fuente_financiacion_rubro_necesidad"
                ],
                "description": "get FuenteFinanciacionRubroNecesidad",
                "operationId": "FuenteFinanciacionRubroNecesidadController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.FuenteFinanciacionRubroNecesidad"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "fuente_financiacion_rubro_necesidad"
                ],
                "description": "create FuenteFinanciacionRubroNecesidad",
                "operationId": "FuenteFinanciacionRubroNecesidadController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FuenteFinanciacionRubroNecesidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FuenteFinanciacionRubroNecesidad"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FuenteFinanciacionRubroNecesidad"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fuente_financiacion_rubro_necesidad/{id}": {
            "get": {
                "tags": [
                    "fuente_financiacion_rubro_necesidad"
                ],
                "description": "get FuenteFinanciacionRubroNecesidad by id",
                "operationId": "FuenteFinanciacionRubroNecesidadController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.FuenteFinanciacionRubroNecesidad"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fuente_financiacion_rubro_necesidad"
                ],
                "description": "update the FuenteFinanciacionRubroNecesidad",
                "operationId": "FuenteFinanciacionRubroNecesidadController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FuenteFinanciacionRubroNecesidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FuenteFinanciacionRubroNecesidad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.FuenteFinanciacionRubroNecesidad"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fuente_financiacion_rubro_necesidad"
                ],
                "description": "delete the FuenteFinanciacionRubroNecesidad",
                "operationId": "FuenteFinanciacionRubroNecesidadController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/lugar_ejecucion/": {
            "get": {
                "tags": [
                    "lugar_ejecucion"
                ],
                "description": "get LugarEjecucion",
                "operationId": "LugarEjecucionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.LugarEjecucion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "lugar_ejecucion"
                ],
                "description": "create LugarEjecucion",
                "operationId": "LugarEjecucionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for LugarEjecucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LugarEjecucion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.LugarEjecucion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/lugar_ejecucion/{id}": {
            "get": {
                "tags": [
                    "lugar_ejecucion"
                ],
                "description": "get LugarEjecucion by id",
                "operationId": "LugarEjecucionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.LugarEjecucion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "lugar_ejecucion"
                ],
                "description": "update the LugarEjecucion",
                "operationId": "LugarEjecucionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for LugarEjecucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LugarEjecucion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.LugarEjecucion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "lugar_ejecucion"
                ],
                "description": "delete the LugarEjecucion",
                "operationId": "LugarEjecucionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/marco_legal/": {
            "get": {
                "tags": [
                    "marco_legal"
                ],
                "description": "get MarcoLegal",
                "operationId": "MarcoLegalController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.MarcoLegal"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "marco_legal"
                ],
                "description": "create MarcoLegal",
                "operationId": "MarcoLegalController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for MarcoLegal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MarcoLegal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.MarcoLegal"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/marco_legal/{id}": {
            "get": {
                "tags": [
                    "marco_legal"
                ],
                "description": "get MarcoLegal by id",
                "operationId": "MarcoLegalController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.MarcoLegal"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "marco_legal"
                ],
                "description": "update the MarcoLegal",
                "operationId": "MarcoLegalController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for MarcoLegal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MarcoLegal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.MarcoLegal"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "marco_legal"
                ],
                "description": "delete the MarcoLegal",
                "operationId": "MarcoLegalController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/marco_legal_necesidad/": {
            "get": {
                "tags": [
                    "marco_legal_necesidad"
                ],
                "description": "get MarcoLegalNecesidad",
                "operationId": "MarcoLegalNecesidadController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.MarcoLegalNecesidad"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "marco_legal_necesidad"
                ],
                "description": "create MarcoLegalNecesidad",
                "operationId": "MarcoLegalNecesidadController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for MarcoLegalNecesidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MarcoLegalNecesidad"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.MarcoLegalNecesidad"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/marco_legal_necesidad/{id}": {
            "get": {
                "tags": [
                    "marco_legal_necesidad"
                ],
                "description": "get MarcoLegalNecesidad by id",
                "operationId": "MarcoLegalNecesidadController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.MarcoLegalNecesidad"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "marco_legal_necesidad"
                ],
                "description": "update the MarcoLegalNecesidad",
                "operationId": "MarcoLegalNecesidadController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for MarcoLegalNecesidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MarcoLegalNecesidad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.MarcoLegalNecesidad"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "marco_legal_necesidad"
                ],
                "description": "delete the MarcoLegalNecesidad",
                "operationId": "MarcoLegalNecesidadController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/modalidad_seleccion/": {
            "get": {
                "tags": [
                    "modalidad_seleccion"
                ],
                "description": "get ModalidadSeleccion",
                "operationId": "ModalidadSeleccionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ModalidadSeleccion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "modalidad_seleccion"
                ],
                "description": "create ModalidadSeleccion",
                "operationId": "ModalidadSeleccionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ModalidadSeleccion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ModalidadSeleccion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ModalidadSeleccion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/modalidad_seleccion/{id}": {
            "get": {
                "tags": [
                    "modalidad_seleccion"
                ],
                "description": "get ModalidadSeleccion by id",
                "operationId": "ModalidadSeleccionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ModalidadSeleccion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "modalidad_seleccion"
                ],
                "description": "update the ModalidadSeleccion",
                "operationId": "ModalidadSeleccionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ModalidadSeleccion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ModalidadSeleccion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ModalidadSeleccion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "modalidad_seleccion"
                ],
                "description": "delete the ModalidadSeleccion",
                "operationId": "ModalidadSeleccionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/necesidad/": {
            "get": {
                "tags": [
                    "necesidad"
                ],
                "description": "get Necesidad",
                "operationId": "NecesidadController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Necesidad"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "necesidad"
                ],
                "description": "create Necesidad",
                "operationId": "NecesidadController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Necesidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Necesidad"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Necesidad"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/necesidad/{id}": {
            "get": {
                "tags": [
                    "necesidad"
                ],
                "description": "get Necesidad by id",
                "operationId": "NecesidadController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Necesidad"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "necesidad"
                ],
                "description": "update the Necesidad",
                "operationId": "NecesidadController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Necesidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Necesidad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Necesidad"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "necesidad"
                ],
                "description": "delete the Necesidad",
                "operationId": "NecesidadController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/necesidad_proceso_externo/": {
            "get": {
                "tags": [
                    "necesidad_proceso_externo"
                ],
                "description": "get NecesidadProcesoExterno",
                "operationId": "NecesidadProcesoExternoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.NecesidadProcesoExterno"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "necesidad_proceso_externo"
                ],
                "description": "create NecesidadProcesoExterno",
                "operationId": "NecesidadProcesoExternoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for NecesidadProcesoExterno content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.NecesidadProcesoExterno"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.NecesidadProcesoExterno"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/necesidad_proceso_externo/{id}": {
            "get": {
                "tags": [
                    "necesidad_proceso_externo"
                ],
                "description": "get NecesidadProcesoExterno by id",
                "operationId": "NecesidadProcesoExternoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.NecesidadProcesoExterno"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "necesidad_proceso_externo"
                ],
                "description": "update the NecesidadProcesoExterno",
                "operationId": "NecesidadProcesoExternoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for NecesidadProcesoExterno content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.NecesidadProcesoExterno"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.NecesidadProcesoExterno"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "necesidad_proceso_externo"
                ],
                "description": "delete the NecesidadProcesoExterno",
                "operationId": "NecesidadProcesoExternoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/parametro_estandar/": {
            "get": {
                "tags": [
                    "parametro_estandar"
                ],
                "description": "get ParametroEstandar",
                "operationId": "ParametroEstandarController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ParametroEstandar"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "parametro_estandar"
                ],
                "description": "create ParametroEstandar",
                "operationId": "ParametroEstandarController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ParametroEstandar content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParametroEstandar"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ParametroEstandar"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/parametro_estandar/{id}": {
            "get": {
                "tags": [
                    "parametro_estandar"
                ],
                "description": "get ParametroEstandar by id",
                "operationId": "ParametroEstandarController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ParametroEstandar"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "parametro_estandar"
                ],
                "description": "update the ParametroEstandar",
                "operationId": "ParametroEstandarController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ParametroEstandar content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParametroEstandar"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ParametroEstandar"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "parametro_estandar"
                ],
                "description": "delete the ParametroEstandar",
                "operationId": "ParametroEstandarController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/parametros/": {
            "get": {
                "tags": [
                    "parametros"
                ],
                "description": "get Parametros",
                "operationId": "ParametrosController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Parametros"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "parametros"
                ],
                "description": "create Parametros",
                "operationId": "ParametrosController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Parametros content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Parametros"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Parametros"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/parametros/{id}": {
            "get": {
                "tags": [
                    "parametros"
                ],
                "description": "get Parametros by id",
                "operationId": "ParametrosController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Parametros"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "parametros"
                ],
                "description": "update the Parametros",
                "operationId": "ParametrosController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Parametros content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Parametros"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Parametros"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "parametros"
                ],
                "description": "delete the Parametros",
                "operationId": "ParametrosController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/persona_escalafon/": {
            "get": {
                "tags": [
                    "persona_escalafon"
                ],
                "description": "get PersonaEscalafon",
                "operationId": "PersonaEscalafonController.Get All",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.PersonaEscalafon"
                        }
                    },
                    "403": {}
                }
            }
        },
        "/poliza/": {
            "get": {
                "tags": [
                    "poliza"
                ],
                "description": "get Poliza",
                "operationId": "PolizaController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Poliza"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "poliza"
                ],
                "description": "create Poliza",
                "operationId": "PolizaController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Poliza content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Poliza"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Poliza"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/poliza/{id}": {
            "get": {
                "tags": [
                    "poliza"
                ],
                "description": "get Poliza by id",
                "operationId": "PolizaController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Poliza"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "poliza"
                ],
                "description": "update the Poliza",
                "operationId": "PolizaController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Poliza content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Poliza"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Poliza"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "poliza"
                ],
                "description": "delete the Poliza",
                "operationId": "PolizaController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/precontratado/Contratado/{idResolucion}": {
            "get": {
                "tags": [
                    "precontratado"
                ],
                "description": "get Precontratado",
                "operationId": "PrecontratadoController.Get All",
                "parameters": [
                    {
                        "in": "path",
                        "name": "idResolucion",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Precontratado"
                        }
                    },
                    "403": {}
                }
            }
        },
        "/precontratado/{idResolucion}": {
            "get": {
                "tags": [
                    "precontratado"
                ],
                "description": "get Precontratado",
                "operationId": "PrecontratadoController.Get All",
                "parameters": [
                    {
                        "in": "path",
                        "name": "idResolucion",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Precontratado"
                        }
                    },
                    "403": {}
                }
            }
        },
        "/precontratado/{idResolucion}/{idPersona}": {
            "get": {
                "tags": [
                    "precontratado"
                ],
                "description": "get Precontratado by id",
                "operationId": "PrecontratadoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "idResolucion",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "idPersona",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Precontratado"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            }
        },
        "/relacion_parametro/": {
            "get": {
                "tags": [
                    "relacion_parametro"
                ],
                "description": "get RelacionParametro",
                "operationId": "RelacionParametroController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.RelacionParametro"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "relacion_parametro"
                ],
                "description": "create RelacionParametro",
                "operationId": "RelacionParametroController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RelacionParametro content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RelacionParametro"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.RelacionParametro"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/relacion_parametro/{id}": {
            "get": {
                "tags": [
                    "relacion_parametro"
                ],
                "description": "get RelacionParametro by id",
                "operationId": "RelacionParametroController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.RelacionParametro"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "relacion_parametro"
                ],
                "description": "update the RelacionParametro",
                "operationId": "RelacionParametroController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RelacionParametro content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RelacionParametro"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.RelacionParametro"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "relacion_parametro"
                ],
                "description": "delete the RelacionParametro",
                "operationId": "RelacionParametroController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/requisito_minimo/": {
            "get": {
                "tags": [
                    "requisito_minimo"
                ],
                "description": "get RequisitoMinimo",
                "operationId": "RequisitoMinimoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.RequisitoMinimo"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "requisito_minimo"
                ],
                "description": "create RequisitoMinimo",
                "operationId": "RequisitoMinimoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RequisitoMinimo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RequisitoMinimo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.RequisitoMinimo"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/requisito_minimo/{id}": {
            "get": {
                "tags": [
                    "requisito_minimo"
                ],
                "description": "get RequisitoMinimo by id",
                "operationId": "RequisitoMinimoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.RequisitoMinimo"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "requisito_minimo"
                ],
                "description": "update the RequisitoMinimo",
                "operationId": "RequisitoMinimoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RequisitoMinimo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RequisitoMinimo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.RequisitoMinimo"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "requisito_minimo"
                ],
                "description": "delete the RequisitoMinimo",
                "operationId": "RequisitoMinimoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/resolucion/": {
            "get": {
                "tags": [
                    "resolucion"
                ],
                "description": "get Resolucion",
                "operationId": "ResolucionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Resolucion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "resolucion"
                ],
                "description": "create Resolucion",
                "operationId": "ResolucionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Resolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Resolucion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Resolucion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/resolucion/{id}": {
            "get": {
                "tags": [
                    "resolucion"
                ],
                "description": "get Resolucion by id",
                "operationId": "ResolucionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Resolucion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "resolucion"
                ],
                "description": "update the Resolucion",
                "operationId": "ResolucionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Resolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Resolucion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.Resolucion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "resolucion"
                ],
                "description": "delete the Resolucion",
                "operationId": "ResolucionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/resolucion_estado/": {
            "get": {
                "tags": [
                    "resolucion_estado"
                ],
                "description": "get ResolucionEstado",
                "operationId": "ResolucionEstadoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ResolucionEstado"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "resolucion_estado"
                ],
                "description": "create ResolucionEstado",
                "operationId": "ResolucionEstadoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ResolucionEstado content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ResolucionEstado"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ResolucionEstado"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/resolucion_estado/{id}": {
            "get": {
                "tags": [
                    "resolucion_estado"
                ],
                "description": "get ResolucionEstado by id",
                "operationId": "ResolucionEstadoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ResolucionEstado"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "resolucion_estado"
                ],
                "description": "update the ResolucionEstado",
                "operationId": "ResolucionEstadoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ResolucionEstado content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ResolucionEstado"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ResolucionEstado"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "resolucion_estado"
                ],
                "description": "delete the ResolucionEstado",
                "operationId": "ResolucionEstadoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/resolucion_vinculacion_docente/": {
            "get": {
                "tags": [
                    "resolucion_vinculacion_docente"
                ],
                "description": "get ResolucionVinculacionDocente",
                "operationId": "ResolucionVinculacionDocenteController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ResolucionVinculacionDocente"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "resolucion_vinculacion_docente"
                ],
                "description": "create ResolucionVinculacionDocente",
                "operationId": "ResolucionVinculacionDocenteController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ResolucionVinculacionDocente content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ResolucionVinculacionDocente"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ResolucionVinculacionDocente"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/resolucion_vinculacion_docente/{id}": {
            "get": {
                "tags": [
                    "resolucion_vinculacion_docente"
                ],
                "description": "get ResolucionVinculacionDocente by id",
                "operationId": "ResolucionVinculacionDocenteController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ResolucionVinculacionDocente"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "resolucion_vinculacion_docente"
                ],
                "description": "update the ResolucionVinculacionDocente",
                "operationId": "ResolucionVinculacionDocenteController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ResolucionVinculacionDocente content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ResolucionVinculacionDocente"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.ResolucionVinculacionDocente"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "resolucion_vinculacion_docente"
                ],
                "description": "delete the ResolucionVinculacionDocente",
                "operationId": "ResolucionVinculacionDocenteController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/solicitud_disponibilidad/": {
            "get": {
                "tags": [
                    "solicitud_disponibilidad"
                ],
                "description": "get SolicitudDisponibilidad",
                "operationId": "SolicitudDisponibilidadController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudDisponibilidad"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "solicitud_disponibilidad"
                ],
                "description": "create SolicitudDisponibilidad",
                "operationId": "SolicitudDisponibilidadController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SolicitudDisponibilidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudDisponibilidad"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.SolicitudDisponibilidad"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/solicitud_disponibilidad/{id}": {
            "get": {
                "tags": [
                    "solicitud_disponibilidad"
                ],
                "description": "get SolicitudDisponibilidad by id",
                "operationId": "SolicitudDisponibilidadController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudDisponibilidad"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "solicitud_disponibilidad"
                ],
                "description": "update the SolicitudDisponibilidad",
                "operationId": "SolicitudDisponibilidadController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SolicitudDisponibilidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudDisponibilidad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudDisponibilidad"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "solicitud_disponibilidad"
                ],
                "description": "delete the SolicitudDisponibilidad",
                "operationId": "SolicitudDisponibilidadController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/solicitud_rp/": {
            "get": {
                "tags": [
                    "solicitud_rp"
                ],
                "description": "get SolicitudRp",
                "operationId": "SolicitudRpController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudRp"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "solicitud_rp"
                ],
                "description": "create SolicitudRp",
                "operationId": "SolicitudRpController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SolicitudRp content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudRp"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.SolicitudRp"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/solicitud_rp/{id}": {
            "get": {
                "tags": [
                    "solicitud_rp"
                ],
                "description": "get SolicitudRp by id",
                "operationId": "SolicitudRpController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudRp"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "solicitud_rp"
                ],
                "description": "update the SolicitudRp",
                "operationId": "SolicitudRpController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SolicitudRp content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudRp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudRp"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "solicitud_rp"
                ],
                "description": "delete the SolicitudRp",
                "operationId": "SolicitudRpController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/supervisor_contrato/": {
            "get": {
                "tags": [
                    "supervisor_contrato"
                ],
                "description": "get SupervisorContrato",
                "operationId": "SupervisorContratoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.SupervisorContrato"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "supervisor_contrato"
                ],
                "description": "create SupervisorContrato",
                "operationId": "SupervisorContratoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SupervisorContrato content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SupervisorContrato"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.SupervisorContrato"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/supervisor_contrato/{id}": {
            "get": {
                "tags": [
                    "supervisor_contrato"
                ],
                "description": "get SupervisorContrato by id",
                "operationId": "SupervisorContratoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.SupervisorContrato"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "supervisor_contrato"
                ],
                "description": "update the SupervisorContrato",
                "operationId": "SupervisorContratoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SupervisorContrato content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SupervisorContrato"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.SupervisorContrato"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "supervisor_contrato"
                ],
                "description": "delete the SupervisorContrato",
                "operationId": "SupervisorContratoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/tipo_contrato/": {
            "get": {
                "tags": [
                    "tipo_contrato"
                ],
                "description": "get TipoContrato",
                "operationId": "TipoContratoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.TipoContrato"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "tipo_contrato"
                ],
                "description": "create TipoContrato",
                "operationId": "TipoContratoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoContrato content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoContrato"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TipoContrato"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/tipo_contrato/{id}": {
            "get": {
                "tags": [
                    "tipo_contrato"
                ],
                "description": "get TipoContrato by id",
                "operationId": "TipoContratoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.TipoContrato"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_contrato"
                ],
                "description": "update the TipoContrato",
                "operationId": "TipoContratoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoContrato content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoContrato"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.TipoContrato"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_contrato"
                ],
                "description": "delete the TipoContrato",
                "operationId": "TipoContratoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/tipo_contrato_necesidad/": {
            "get": {
                "tags": [
                    "tipo_contrato_necesidad"
                ],
                "description": "get TipoContratoNecesidad",
                "operationId": "TipoContratoNecesidadController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.TipoContratoNecesidad"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "tipo_contrato_necesidad"
                ],
                "description": "create TipoContratoNecesidad",
                "operationId": "TipoContratoNecesidadController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoContratoNecesidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoContratoNecesidad"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TipoContratoNecesidad"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/tipo_contrato_necesidad/{id}": {
            "get": {
                "tags": [
                    "tipo_contrato_necesidad"
                ],
                "description": "get TipoContratoNecesidad by id",
                "operationId": "TipoContratoNecesidadController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.TipoContratoNecesidad"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_contrato_necesidad"
                ],
                "description": "update the TipoContratoNecesidad",
                "operationId": "TipoContratoNecesidadController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoContratoNecesidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoContratoNecesidad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.TipoContratoNecesidad"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_contrato_necesidad"
                ],
                "description": "delete the TipoContratoNecesidad",
                "operationId": "TipoContratoNecesidadController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/tipo_financiacion_necesidad/": {
            "get": {
                "tags": [
                    "tipo_financiacion_necesidad"
                ],
                "description": "get TipoFinanciacionNecesidad",
                "operationId": "TipoFinanciacionNecesidadController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.TipoFinanciacionNecesidad"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "tipo_financiacion_necesidad"
                ],
                "description": "create TipoFinanciacionNecesidad",
                "operationId": "TipoFinanciacionNecesidadController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoFinanciacionNecesidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoFinanciacionNecesidad"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TipoFinanciacionNecesidad"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/tipo_financiacion_necesidad/{id}": {
            "get": {
                "tags": [
                    "tipo_financiacion_necesidad"
                ],
                "description": "get TipoFinanciacionNecesidad by id",
                "operationId": "TipoFinanciacionNecesidadController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.TipoFinanciacionNecesidad"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_financiacion_necesidad"
                ],
                "description": "update the TipoFinanciacionNecesidad",
                "operationId": "TipoFinanciacionNecesidadController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoFinanciacionNecesidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoFinanciacionNecesidad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.TipoFinanciacionNecesidad"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_financiacion_necesidad"
                ],
                "description": "delete the TipoFinanciacionNecesidad",
                "operationId": "TipoFinanciacionNecesidadController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/tipo_necesidad/": {
            "get": {
                "tags": [
                    "tipo_necesidad"
                ],
                "description": "get TipoNecesidad",
                "operationId": "TipoNecesidadController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.TipoNecesidad"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "tipo_necesidad"
                ],
                "description": "create TipoNecesidad",
                "operationId": "TipoNecesidadController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoNecesidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoNecesidad"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TipoNecesidad"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/tipo_necesidad/{id}": {
            "get": {
                "tags": [
                    "tipo_necesidad"
                ],
                "description": "get TipoNecesidad by id",
                "operationId": "TipoNecesidadController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.TipoNecesidad"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_necesidad"
                ],
                "description": "update the TipoNecesidad",
                "operationId": "TipoNecesidadController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoNecesidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoNecesidad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.TipoNecesidad"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_necesidad"
                ],
                "description": "delete the TipoNecesidad",
                "operationId": "TipoNecesidadController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/tipo_resolucion/": {
            "get": {
                "tags": [
                    "tipo_resolucion"
                ],
                "description": "get TipoResolucion",
                "operationId": "TipoResolucionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.TipoResolucion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "tipo_resolucion"
                ],
                "description": "create TipoResolucion",
                "operationId": "TipoResolucionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoResolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoResolucion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TipoResolucion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/tipo_resolucion/{id}": {
            "get": {
                "tags": [
                    "tipo_resolucion"
                ],
                "description": "get TipoResolucion by id",
                "operationId": "TipoResolucionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.TipoResolucion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_resolucion"
                ],
                "description": "update the TipoResolucion",
                "operationId": "TipoResolucionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoResolucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoResolucion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.TipoResolucion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_resolucion"
                ],
                "description": "delete the TipoResolucion",
                "operationId": "TipoResolucionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/tr_necesidad/": {
            "post": {
                "tags": [
                    "tr_necesidad"
                ],
                "description": "insert the TrNecesidad",
                "operationId": "TrNecesidadController.TrNecesidad",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TrNecesidad content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TrNecesidad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/.msg"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            }
        },
        "/vigencia_contrato/": {
            "get": {
                "tags": [
                    "vigencia_contrato"
                ],
                "description": "create VigenciaContrato",
                "operationId": "VigenciaContratoController.VigenciaContrato",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for VigenciaContrato content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/.VigenciaContrato"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int}"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/vinculacion_docente/": {
            "get": {
                "tags": [
                    "vinculacion_docente"
                ],
                "description": "get VinculacionDocente",
                "operationId": "VinculacionDocenteController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.VinculacionDocente"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "vinculacion_docente"
                ],
                "description": "create VinculacionDocente",
                "operationId": "VinculacionDocenteController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for VinculacionDocente content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.VinculacionDocente"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.VinculacionDocente"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/vinculacion_docente/InsertarVinculaciones": {
            "post": {
                "tags": [
                    "vinculacion_docente"
                ],
                "description": "create VinculacionDocente",
                "operationId": "VinculacionDocenteController.Post",
                "responses": {
                    "201": {
                        "description": "{int} models.VinculacionDocente"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/vinculacion_docente/{id}": {
            "get": {
                "tags": [
                    "vinculacion_docente"
                ],
                "description": "get VinculacionDocente by id",
                "operationId": "VinculacionDocenteController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.VinculacionDocente"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "vinculacion_docente"
                ],
                "description": "update the VinculacionDocente",
                "operationId": "VinculacionDocenteController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for VinculacionDocente content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.VinculacionDocente"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.VinculacionDocente"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "vinculacion_docente"
                ],
                "description": "delete the VinculacionDocente",
                "operationId": "VinculacionDocenteController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        }
    },
    "definitions": {
        ".VigenciaContrato": {
            "type": "object"
        },
        ".msg": {
            "type": "object"
        },
        "models.ActaInicio": {
            "title": "ActaInicio",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "FechaFin": {
                    "type": "string",
                    "format": "string"
                },
                "FechaInicio": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroContrato": {
                    "$ref": "#/definitions/models.ContratoGeneral"
                },
                "Usuario": {
                    "type": "string"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.ActividadEconomicaNecesidad": {
            "title": "ActividadEconomicaNecesidad",
            "type": "object",
            "properties": {
                "ActividadEconomica": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "SolicitudNecesidad": {
                    "$ref": "#/definitions/models.Necesidad"
                }
            }
        },
        "models.ActividadEspecifica": {
            "title": "ActividadEspecifica",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Necesidad": {
                    "$ref": "#/definitions/models.Necesidad"
                }
            }
        },
        "models.Articulo": {
            "title": "Articulo",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Numero": {
                    "type": "integer",
                    "format": "int64"
                },
                "Paragrafos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Paragrafo"
                    }
                },
                "Texto": {
                    "type": "string"
                }
            }
        },
        "models.CatalogoElemento": {
            "title": "CatalogoElemento",
            "type": "object",
            "properties": {
                "ElementoCatalogo": {
                    "type": "integer",
                    "format": "int64"
                },
                "ElementoCodigo": {
                    "type": "integer",
                    "format": "int64"
                },
                "ElementoEstado": {
                    "type": "number",
                    "format": "double"
                },
                "ElementoFechaCreacion": {
                    "type": "string",
                    "format": "string"
                },
                "ElementoGrupoc": {
                    "type": "string"
                },
                "ElementoNombre": {
                    "type": "string"
                },
                "ElementoPadre": {
                    "type": "integer",
                    "format": "int64"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.CatalogoElementoGrupo": {
            "title": "CatalogoElementoGrupo",
            "type": "object",
            "properties": {
                "ElementoCatalogo": {
                    "type": "integer",
                    "format": "int64"
                },
                "ElementoCodigo": {
                    "type": "integer",
                    "format": "int64"
                },
                "ElementoEstado": {
                    "type": "number",
                    "format": "double"
                },
                "ElementoFechaCreacion": {
                    "type": "string",
                    "format": "string"
                },
                "ElementoNombre": {
                    "type": "string"
                },
                "ElementoPadre": {
                    "type": "integer",
                    "format": "int64"
                },
                "ElementoTipobien": {
                    "type": "number",
                    "format": "double"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.ComponenteResolucion": {
            "title": "ComponenteResolucion",
            "type": "object",
            "properties": {
                "ComponentePadre": {
                    "$ref": "#/definitions/models.ComponenteResolucion"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Numero": {
                    "type": "integer",
                    "format": "int64"
                },
                "ResolucionId": {
                    "$ref": "#/definitions/models.Resolucion"
                },
                "Texto": {
                    "type": "string"
                },
                "TipoComponente": {
                    "type": "string"
                }
            }
        },
        "models.ContratoDisponibilidad": {
            "title": "ContratoDisponibilidad",
            "type": "object",
            "properties": {
                "Estado": {
                    "type": "boolean"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroCdp": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroContrato": {
                    "type": "string"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                },
                "VigenciaCdp": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.ContratoEstado": {
            "title": "ContratoEstado",
            "type": "object",
            "properties": {
                "Estado": {
                    "$ref": "#/definitions/models.EstadoContrato"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroContrato": {
                    "type": "string"
                },
                "Usuario": {
                    "type": "string"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.ContratoGeneral": {
            "title": "ContratoGeneral",
            "type": "object",
            "properties": {
                "ClaseContratista": {
                    "type": "integer",
                    "format": "int64"
                },
                "ClausulaRegistroPresupuestal": {
                    "type": "boolean"
                },
                "Condiciones": {
                    "type": "string"
                },
                "Contratista": {
                    "type": "integer",
                    "format": "int64"
                },
                "Convenio": {
                    "type": "string"
                },
                "DependenciaSolicitante": {
                    "type": "string"
                },
                "DescripcionFormaPago": {
                    "type": "string"
                },
                "Estado": {
                    "type": "boolean"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "string"
                },
                "FormaPago": {
                    "$ref": "#/definitions/models.Parametros"
                },
                "Id": {
                    "type": "string"
                },
                "Justificacion": {
                    "type": "string"
                },
                "LugarEjecucion": {
                    "$ref": "#/definitions/models.LugarEjecucion"
                },
                "ModalidadSeleccion": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroCdp": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroConstancia": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroSolicitudNecesidad": {
                    "type": "integer",
                    "format": "int64"
                },
                "ObjetoContrato": {
                    "type": "string"
                },
                "Observaciones": {
                    "type": "string"
                },
                "OrdenadorGasto": {
                    "type": "integer",
                    "format": "int64"
                },
                "OrigenPresupueso": {
                    "type": "integer",
                    "format": "int64"
                },
                "OrigenRecursos": {
                    "type": "integer",
                    "format": "int64"
                },
                "PlazoEjecucion": {
                    "type": "integer",
                    "format": "int64"
                },
                "Procedimiento": {
                    "type": "integer",
                    "format": "int64"
                },
                "RegimenContratacion": {
                    "type": "integer",
                    "format": "int64"
                },
                "RegistroPresupuestal": {
                    "type": "integer",
                    "format": "int64"
                },
                "SedeSolicitante": {
                    "type": "string"
                },
                "Supervisor": {
                    "$ref": "#/definitions/models.SupervisorContrato"
                },
                "TemaGastoInversion": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoCompromiso": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoContrato": {
                    "$ref": "#/definitions/models.TipoContrato"
                },
                "TipoControl": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoGasto": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoMoneda": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipologiaContrato": {
                    "type": "integer",
                    "format": "int64"
                },
                "UnidadEjecucion": {
                    "$ref": "#/definitions/models.Parametros"
                },
                "UnidadEjecutora": {
                    "type": "integer",
                    "format": "int64"
                },
                "ValorContrato": {
                    "type": "number",
                    "format": "double"
                },
                "ValorContratoMe": {
                    "type": "number",
                    "format": "double"
                },
                "ValorTasaCambio": {
                    "type": "number",
                    "format": "double"
                },
                "VigenciaContrato": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.Dedicacion": {
            "title": "Dedicacion",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NombreDedicacion": {
                    "type": "string"
                }
            }
        },
        "models.DependenciaNecesidad": {
            "title": "DependenciaNecesidad",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "JefeDependenciaDestino": {
                    "type": "integer",
                    "format": "int64"
                },
                "JefeDependenciaSolicitante": {
                    "type": "integer",
                    "format": "int64"
                },
                "Necesidad": {
                    "$ref": "#/definitions/models.Necesidad"
                },
                "OrdenadorGasto": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.DetalleServicioNecesidad": {
            "title": "DetalleServicioNecesidad",
            "type": "object",
            "properties": {
                "Cantidad": {
                    "type": "integer",
                    "format": "int64"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Necesidad": {
                    "$ref": "#/definitions/models.Necesidad"
                },
                "NucleoConocimiento": {
                    "type": "integer",
                    "format": "int64"
                },
                "Perfil": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.DisponibilidadApropiacionSolicitudRp": {
            "title": "DisponibilidadApropiacionSolicitudRp",
            "type": "object",
            "properties": {
                "DisponibilidadApropiacion": {
                    "type": "integer",
                    "format": "int64"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Monto": {
                    "type": "number",
                    "format": "double"
                },
                "SolicitudRp": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.EspecificacionTecnica": {
            "title": "EspecificacionTecnica",
            "type": "object",
            "properties": {
                "Cantidad": {
                    "type": "integer",
                    "format": "int64"
                },
                "Catalogo": {
                    "type": "integer",
                    "format": "int64"
                },
                "Elemento": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Iva": {
                    "type": "integer",
                    "format": "int64"
                },
                "Necesidad": {
                    "$ref": "#/definitions/models.Necesidad"
                },
                "Unidad": {
                    "type": "integer",
                    "format": "int64"
                },
                "Valor": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.EstadoContrato": {
            "title": "EstadoContrato",
            "type": "object",
            "properties": {
                "FechaRegistro": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NombreEstado": {
                    "type": "string"
                }
            }
        },
        "models.EstadoNecesidad": {
            "title": "EstadoNecesidad",
            "type": "object",
            "properties": {
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Estado": {
                    "type": "boolean"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "string"
                }
            }
        },
        "models.EstadoResolucion": {
            "title": "EstadoResolucion",
            "type": "object",
            "properties": {
                "FechaRegistro": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NombreEstado": {
                    "type": "string"
                }
            }
        },
        "models.FuenteFinanciacionRubroNecesidad": {
            "title": "FuenteFinanciacionRubroNecesidad",
            "type": "object",
            "properties": {
                "Apropiacion": {
                    "type": "integer",
                    "format": "int64"
                },
                "FuenteFinanciamiento": {
                    "type": "integer",
                    "format": "int64"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "MontoParcial": {
                    "type": "number",
                    "format": "double"
                },
                "Necesidad": {
                    "$ref": "#/definitions/models.Necesidad"
                }
            }
        },
        "models.LugarEjecucion": {
            "title": "LugarEjecucion",
            "type": "object",
            "properties": {
                "Ciudad": {
                    "type": "number",
                    "format": "double"
                },
                "Dependencia": {
                    "type": "string"
                },
                "Direccion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Sede": {
                    "type": "string"
                }
            }
        },
        "models.MarcoLegal": {
            "title": "MarcoLegal",
            "type": "object",
            "properties": {
                "Enlace": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NombreDocumento": {
                    "type": "string"
                }
            }
        },
        "models.MarcoLegalNecesidad": {
            "title": "MarcoLegalNecesidad",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "MarcoLegal": {
                    "$ref": "#/definitions/models.MarcoLegal"
                },
                "Necesidad": {
                    "$ref": "#/definitions/models.Necesidad"
                }
            }
        },
        "models.ModalidadSeleccion": {
            "title": "ModalidadSeleccion",
            "type": "object",
            "properties": {
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Estado": {
                    "type": "boolean"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "string"
                }
            }
        },
        "models.Necesidad": {
            "title": "Necesidad",
            "type": "object",
            "properties": {
                "AgotarPresupuesto": {
                    "type": "boolean"
                },
                "AnalisisRiesgo": {
                    "type": "string"
                },
                "DependenciaReversa": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DependenciaNecesidad"
                    }
                },
                "DiasDuracion": {
                    "type": "number",
                    "format": "double"
                },
                "EstadoNecesidad": {
                    "$ref": "#/definitions/models.EstadoNecesidad"
                },
                "EstudioMercado": {
                    "type": "string"
                },
                "FechaModificacion": {
                    "type": "string",
                    "format": "string"
                },
                "FechaSolicitud": {
                    "type": "string",
                    "format": "string"
                },
                "FuenteReversa": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.FuenteFinanciacionRubroNecesidad"
                    }
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Justificacion": {
                    "type": "string"
                },
                "JustificacionAnulacion": {
                    "type": "string"
                },
                "JustificacionRechazo": {
                    "type": "string"
                },
                "ModalidadSeleccion": {
                    "$ref": "#/definitions/models.ModalidadSeleccion"
                },
                "Numero": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroElaboracion": {
                    "type": "integer",
                    "format": "int64"
                },
                "Objeto": {
                    "type": "string"
                },
                "PlanAnualAdquisiciones": {
                    "type": "integer",
                    "format": "int64"
                },
                "Supervisor": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoContratoNecesidad": {
                    "$ref": "#/definitions/models.TipoContratoNecesidad"
                },
                "TipoFinanciacionNecesidad": {
                    "$ref": "#/definitions/models.TipoFinanciacionNecesidad"
                },
                "TipoNecesidad": {
                    "$ref": "#/definitions/models.TipoNecesidad"
                },
                "UnicoPago": {
                    "type": "boolean"
                },
                "UnidadEjecutora": {
                    "type": "integer",
                    "format": "int64"
                },
                "Valor": {
                    "type": "number",
                    "format": "double"
                },
                "Vigencia": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.NecesidadProcesoExterno": {
            "title": "NecesidadProcesoExterno",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Necesidad": {
                    "$ref": "#/definitions/models.Necesidad"
                },
                "ProcesoExterno": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoNecesidad": {
                    "$ref": "#/definitions/models.TipoNecesidad"
                }
            }
        },
        "models.Paragrafo": {
            "title": "Paragrafo",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Numero": {
                    "type": "integer",
                    "format": "int64"
                },
                "Texto": {
                    "type": "string"
                }
            }
        },
        "models.ParametroEstandar": {
            "title": "ParametroEstandar",
            "type": "object",
            "properties": {
                "ClaseParametro": {
                    "type": "string"
                },
                "DescripcionParametro": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ValorParametro": {
                    "type": "string"
                }
            }
        },
        "models.Parametros": {
            "title": "Parametros",
            "type": "object",
            "properties": {
                "CodigoContraloria": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "EstadoRegistro": {
                    "type": "boolean"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "RelParametro": {
                    "$ref": "#/definitions/models.RelacionParametro"
                }
            }
        },
        "models.PersonaEscalafon": {
            "title": "PersonaEscalafon",
            "type": "object",
            "properties": {
                "Escalafon": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "PrimerApellido": {
                    "type": "string"
                },
                "PrimerNombre": {
                    "type": "string"
                },
                "SegundoApellido": {
                    "type": "string"
                },
                "SegundoNombre": {
                    "type": "string"
                }
            }
        },
        "models.Poliza": {
            "title": "Poliza",
            "type": "object",
            "properties": {
                "DescripcionPoliza": {
                    "type": "string"
                },
                "EntidadAseguradora": {
                    "type": "integer",
                    "format": "int64"
                },
                "Estado": {
                    "type": "boolean"
                },
                "FechaAprobacion": {
                    "type": "string",
                    "format": "string"
                },
                "FechaFin": {
                    "type": "string",
                    "format": "string"
                },
                "FechaInicio": {
                    "type": "string",
                    "format": "string"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroContrato": {
                    "type": "string"
                },
                "NumeroPoliza": {
                    "type": "string"
                },
                "Usuario": {
                    "type": "string"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.Precontratado": {
            "title": "Precontratado",
            "type": "object",
            "properties": {
                "Categoria": {
                    "type": "string"
                },
                "Dedicacion": {
                    "type": "string"
                },
                "Documento": {
                    "type": "integer",
                    "format": "int64"
                },
                "Expedicion": {
                    "type": "string"
                },
                "HorasSemanales": {
                    "type": "integer",
                    "format": "int64"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "PrimerApellido": {
                    "type": "string"
                },
                "PrimerNombre": {
                    "type": "string"
                },
                "ProyectoCurricular": {
                    "type": "integer",
                    "format": "int64"
                },
                "SegundoApellido": {
                    "type": "string"
                },
                "SegundoNombre": {
                    "type": "string"
                },
                "Semanas": {
                    "type": "integer",
                    "format": "int64"
                },
                "ValorContrato": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.RelacionParametro": {
            "title": "RelacionParametro",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "EstadoRegistro": {
                    "type": "boolean"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.RequisitoMinimo": {
            "title": "RequisitoMinimo",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "EspecificacionTecnica": {
                    "$ref": "#/definitions/models.EspecificacionTecnica"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.Resolucion": {
            "title": "Resolucion",
            "type": "object",
            "properties": {
                "ConsideracionResolucion": {
                    "type": "string"
                },
                "Estado": {
                    "type": "boolean"
                },
                "FechaExpedicion": {
                    "$ref": "#/definitions/time.Time"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdDependencia": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdTipoResolucion": {
                    "$ref": "#/definitions/models.TipoResolucion"
                },
                "NumeroResolucion": {
                    "type": "string"
                },
                "Objeto": {
                    "type": "string"
                },
                "PreambuloResolucion": {
                    "type": "string"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.ResolucionCompleta": {
            "title": "ResolucionCompleta",
            "type": "object",
            "properties": {
                "Articulos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Articulo"
                    }
                },
                "Consideracion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Numero": {
                    "type": "string"
                },
                "Preambulo": {
                    "type": "string"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                },
                "Vinculacion": {
                    "$ref": "#/definitions/models.ResolucionVinculacionDocente"
                }
            }
        },
        "models.ResolucionEstado": {
            "title": "ResolucionEstado",
            "type": "object",
            "properties": {
                "Estado": {
                    "$ref": "#/definitions/models.EstadoResolucion"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Resolucion": {
                    "$ref": "#/definitions/models.Resolucion"
                },
                "Usuario": {
                    "type": "string"
                }
            }
        },
        "models.ResolucionVinculacionDocente": {
            "title": "ResolucionVinculacionDocente",
            "type": "object",
            "properties": {
                "Dedicacion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdFacultad": {
                    "type": "integer",
                    "format": "int64"
                },
                "NivelAcademico": {
                    "type": "string"
                }
            }
        },
        "models.SolicitudDisponibilidad": {
            "title": "SolicitudDisponibilidad",
            "type": "object",
            "properties": {
                "Expedida": {
                    "type": "boolean"
                },
                "FechaSolicitud": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "JustificacionRechazo": {
                    "type": "string"
                },
                "Necesidad": {
                    "$ref": "#/definitions/models.Necesidad"
                },
                "Numero": {
                    "type": "integer",
                    "format": "int64"
                },
                "Vigencia": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.SolicitudRp": {
            "title": "SolicitudRp",
            "type": "object",
            "properties": {
                "Cdp": {
                    "type": "integer",
                    "format": "int64"
                },
                "Compromiso": {
                    "type": "integer",
                    "format": "int64"
                },
                "Expedida": {
                    "type": "boolean"
                },
                "FechaSolicitud": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Justificacion": {
                    "type": "integer",
                    "format": "int64"
                },
                "Masivo": {
                    "type": "boolean"
                },
                "NumeroContrato": {
                    "type": "string"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                },
                "VigenciaContrato": {
                    "type": "string"
                }
            }
        },
        "models.SupervisorContrato": {
            "title": "SupervisorContrato",
            "type": "object",
            "properties": {
                "Cargo": {
                    "type": "string"
                },
                "DependenciaSupervisor": {
                    "type": "string"
                },
                "DigitoVerificacion": {
                    "type": "integer",
                    "format": "int64"
                },
                "Documento": {
                    "type": "integer",
                    "format": "int64"
                },
                "Estado": {
                    "type": "boolean"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "SedeSupervisor": {
                    "type": "string"
                },
                "Tipo": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.TipoContrato": {
            "title": "TipoContrato",
            "type": "object",
            "properties": {
                "Estado": {
                    "type": "boolean"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdGrupoTipoContrato": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoContrato": {
                    "type": "string"
                }
            }
        },
        "models.TipoContratoNecesidad": {
            "title": "TipoContratoNecesidad",
            "type": "object",
            "properties": {
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Estado": {
                    "type": "boolean"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "string"
                }
            }
        },
        "models.TipoFinanciacionNecesidad": {
            "title": "TipoFinanciacionNecesidad",
            "type": "object",
            "properties": {
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Estado": {
                    "type": "boolean"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "string"
                }
            }
        },
        "models.TipoNecesidad": {
            "title": "TipoNecesidad",
            "type": "object",
            "properties": {
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Estado": {
                    "type": "boolean"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "string"
                }
            }
        },
        "models.TipoResolucion": {
            "title": "TipoResolucion",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NombreTipoResolucion": {
                    "type": "string"
                }
            }
        },
        "models.TrEspecificacion": {
            "title": "TrEspecificacion",
            "type": "object",
            "properties": {
                "EspecificacionTecnica": {
                    "$ref": "#/definitions/models.EspecificacionTecnica"
                },
                "RequisitoMinimo": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.RequisitoMinimo"
                    }
                }
            }
        },
        "models.TrNecesidad": {
            "title": "TrNecesidad",
            "type": "object",
            "properties": {
                "ActividadEconomicaNecesidad": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ActividadEconomicaNecesidad"
                    }
                },
                "ActividadEspecifica": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ActividadEspecifica"
                    }
                },
                "DependenciaNecesidad": {
                    "$ref": "#/definitions/models.DependenciaNecesidad"
                },
                "DetalleServicioNecesidad": {
                    "$ref": "#/definitions/models.DetalleServicioNecesidad"
                },
                "Especificacion": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TrEspecificacion"
                    }
                },
                "Ffapropiacion": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.FuenteFinanciacionRubroNecesidad"
                    }
                },
                "MarcoLegalNecesidad": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.MarcoLegalNecesidad"
                    }
                },
                "Necesidad": {
                    "$ref": "#/definitions/models.Necesidad"
                }
            }
        },
        "models.VinculacionDocente": {
            "title": "VinculacionDocente",
            "type": "object",
            "properties": {
                "Estado": {
                    "type": "boolean"
                },
                "FechaRegistro": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdDedicacion": {
                    "$ref": "#/definitions/models.Dedicacion"
                },
                "IdPersona": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdProyectoCurricular": {
                    "type": "integer",
                    "format": "int32"
                },
                "IdPuntoSalarial": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdResolucion": {
                    "$ref": "#/definitions/models.ResolucionVinculacionDocente"
                },
                "IdSalarioMinimo": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroContrato": {
                    "type": "string"
                },
                "NumeroHorasSemanales": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroSemanas": {
                    "type": "integer",
                    "format": "int64"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        }
    },
    "tags": [
        {
            "name": "contrato_general",
            "description": " ContratoGeneralController operations for ContratoGeneral\n"
        },
        {
            "name": "vigencia_contrato",
            "description": " VigenciaContratoController operations for VigenciaContrato\n"
        },
        {
            "name": "contrato_disponibilidad",
            "description": "ContratoDisponibilidadController operations for ContratoDisponibilidad\n"
        },
        {
            "name": "detalle_servicio_necesidad",
            "description": "DetalleServicioNecesidadController operations for DetalleServicioNecesidad\n"
        },
        {
            "name": "tipo_resolucion",
            "description": "TipoResolucionController operations for TipoResolucion\n"
        },
        {
            "name": "dedicacion",
            "description": "DedicacionController operations for Dedicacion\n"
        },
        {
            "name": "fuente_financiacion_rubro_necesidad",
            "description": "FuenteFinanciacionRubroNecesidadController operations for FuenteFinanciacionRubroNecesidad\n"
        },
        {
            "name": "marco_legal_necesidad",
            "description": "MarcoLegalNecesidadController operations for MarcoLegalNecesidad\n"
        },
        {
            "name": "marco_legal",
            "description": "MarcoLegalController operations for MarcoLegal\n"
        },
        {
            "name": "vinculacion_docente",
            "description": "VinculacionDocenteController oprations for VinculacionDocente\n"
        },
        {
            "name": "resolucion_vinculacion_docente",
            "description": "ResolucionVinculacionDocenteController operations for ResolucionVinculacionDocente\n"
        },
        {
            "name": "resolucion",
            "description": "ResolucionController oprations for Resolucion\n"
        },
        {
            "name": "catalogo_elemento",
            "description": "CatalogoElementoController operations for CatalogoElemento\n"
        },
        {
            "name": "catalogo_elemento_grupo",
            "description": "CatalogoElementoGrupoController operations for CatalogoElementoGrupo\n"
        },
        {
            "name": "componente_resolucion",
            "description": "ComponenteResolucionController operations for ComponenteResolucion\n"
        },
        {
            "name": "disponibilidad_apropiacion_solicitud_rp",
            "description": "DisponibilidadApropiacionSolicitudRpController operations for DisponibilidadApropiacionSolicitudRp\n"
        },
        {
            "name": "tipo_contrato",
            "description": "TipoContratoController operations for TipoContrato\n"
        },
        {
            "name": "parametro_estandar",
            "description": "ParametroEstandarController operations for ParametroEstandar\n"
        },
        {
            "name": "relacion_parametro",
            "description": "RelacionParametroController operations for RelacionParametro\n"
        },
        {
            "name": "tipo_financiacion_necesidad",
            "description": "TipoFinanciacionNecesidadController operations for TipoFinanciacionNecesidad\n"
        },
        {
            "name": "actividad_economica_necesidad",
            "description": "ActividadEconomicaNecesidadController operations for ActividadEconomicaNecesidad\n"
        },
        {
            "name": "especificacion_tecnica",
            "description": "EspecificacionTecnicaController operations for EspecificacionTecnica\n"
        },
        {
            "name": "tipo_contrato_necesidad",
            "description": "TipoContratoNecesidadController operations for TipoContratoNecesidad\n"
        },
        {
            "name": "actividad_especifica",
            "description": "ActividadEspecificaController operations for ActividadEspecifica\n"
        },
        {
            "name": "estado_necesidad",
            "description": "EstadoNecesidadController operations for EstadoNecesidad\n"
        },
        {
            "name": "modalidad_seleccion",
            "description": "ModalidadSeleccionController operations for ModalidadSeleccion\n"
        },
        {
            "name": "requisito_minimo",
            "description": "RequisitoMinimoController operations for RequisitoMinimo\n"
        },
        {
            "name": "lugar_ejecucion",
            "description": "LugarEjecucionController operations for LugarEjecucion\n"
        },
        {
            "name": "supervisor_contrato",
            "description": "SupervisorContratoController operations for SupervisorContrato\n"
        },
        {
            "name": "tipo_contrato",
            "description": "TipoContratoController operations for TipoContrato\n"
        },
        {
            "name": "acta_inicio",
            "description": "ActaInicioController operations for ActaInicio\n"
        },
        {
            "name": "solicitud_disponibilidad",
            "description": "SolicitudDisponibilidadController operations for SolicitudDisponibilidad\n"
        },
        {
            "name": "necesidad",
            "description": "NecesidadController operations for Necesidad\n"
        },
        {
            "name": "dependencia_necesidad",
            "description": "DependenciaNecesidadController operations for DependenciaNecesidad\n"
        },
        {
            "name": "estado_contrato",
            "description": "EstadoContratoController operations for EstadoContrato\n"
        },
        {
            "name": "contrato_estado",
            "description": "ContratoEstadoController operations for ContratoEstado\n"
        },
        {
            "name": "parametros",
            "description": "ParametrosController operations for Parametros\n"
        },
        {
            "name": "poliza",
            "description": "PolizaController operations for Poliza\n"
        },
        {
            "name": "tr_necesidad",
            "description": "oprations for Necesidad\n"
        },
        {
            "name": "estado_resolucion",
            "description": "EstadoResolucionController operations for EstadoResolucion\n"
        },
        {
            "name": "vinculacion_docente",
            "description": "VinculacionDocenteController oprations for VinculacionDocente\n"
        },
        {
            "name": "solicitud_rp",
            "description": "SolicitudRpController operations for SolicitudRp\n"
        },
        {
            "name": "resolucion_estado",
            "description": "ResolucionEstadoController oprations for ResolucionEstado\n"
        },
        {
            "name": "resolucion",
            "description": "ResolucionController oprations for Resolucion\n"
        },
        {
            "name": "tipo_necesidad",
            "description": "TipoNecesidadController operations for TipoNecesidad\n"
        },
        {
            "name": "necesidad_proceso_externo",
            "description": "NecesidadProcesoExternoController operations for NecesidadProcesoExterno\n"
        }
    ]
}